@using Easy_Bazar.Code
@model DataSets.ViewModels.HomeVM

@{
    ViewData["Title"] = "Shop";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var catName = TempData["CatName"];
}


<!-- Page title -->
<div class="page-title parallax parallax1">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="page-title-heading">
                    <h1 class="title">Shop</h1>
                </div><!-- /.page-title-heading -->
            </div><!-- /.col-md-12 -->
        </div><!-- /.row -->
    </div><!-- /.container -->
</div><!-- /.page-title -->

<section class="flat-row main-shop">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="filter-shop clearfix">
                    <p class="showing-product">
                        Showing 1–12 of @Model.Products.Count() Products
                    </p>
                    <ul class="flat-filter-search">
                        <li>
                            <a class="show-filter">Filters</a>
                        </li>
                        <li class="search-product"><a>Search</a></li>
                    </ul>
                </div><!-- /.filte-shop -->
                <div class="box-filter slidebar-shop clearfix">
                    <div class="btn-close"><button><i class="fa fa-times"></i></button></div>
                    <div class="widget widget-sort-by">
                        <h5 class="widget-title">
                            Sort By
                        </h5>
                        <ul>
                            <li><a href="@Url.Action("Index", "Shop", new { Sortby = (int)SortByEnums.Default})" class="@(Model.sortBy.HasValue ? Model.sortBy.Value ==(int)SortByEnums.Default ? "active" : string.Empty : string.Empty )">Default - Newest</a></li>
                            <li><a href="@Url.Action("Index", "Shop", new { Sortby = (int)SortByEnums.Popularity})" class="@(Model.sortBy.HasValue ? Model.sortBy.Value ==(int)SortByEnums.Popularity ? "active" : string.Empty : string.Empty )">Popularity</a></li>
                            <li><a href="@Url.Action("Index", "Shop", new { Sortby = (int)SortByEnums.PricelowToHigh})" class="@(Model.sortBy.HasValue ? Model.sortBy.Value ==(int)SortByEnums.PricelowToHigh ? "active" : string.Empty : string.Empty )">Price: Low To High</a></li>
                            <li><a href="@Url.Action("Index", "Shop", new { Sortby = (int)SortByEnums.PriceHighToLow})" class="@(Model.sortBy.HasValue ? Model.sortBy.Value ==(int)SortByEnums.PriceHighToLow ? "active" : string.Empty : string.Empty )">Price: High To Low</a></li>
                        </ul>
                    </div><!-- /.widget-sort-by -->
                    <div class="widget widget-price">
                        <h5 class="widget-title">Price</h5>
                        <div class="price_slider">
                            <div id="slide_range"></div>
                            <p class="amount">
                                Price: <input type="text" id="amount" disabled="disabled" />
                            </p>
                        </div>
                        @*<ul>
                <li><a href="#" class="active">$0.00 - $50.00</a></li>
                <li><a href="#">$50.00 - $100.00</a></li>
                <li><a href="#">$100.00 - $150.00</a></li>
                <li><a href="#">$150.00 - $200.00</a></li>
                <li><a href="#">$200.00 - 250.00</a></li>
                <li><a href="#">250.00+</a></li>
                </ul>*@
                    </div><!-- /.widget -->
                    <div class="widget widget_tag">
                        <h5 class="widget-title">
                            Categories
                        </h5>
                        <div class="tag-list">
                            @foreach (var item in Model.Categories)
                            {
                                <a href="@Url.Action("Index","Shop", new {cateId = item.ID })">@item.Name</a>
                            }
                        </div>
                    </div><!-- /.widget -->
                </div><!-- /.box-filter -->
                <div class="shop-search clearfix">
                    <form role="search" method="get" class="search-form" action="@Url.Action("Index", "Shop")">
                        <label>
                            <input type="search" class="search-field" placeholder="Searching …" value="" name="searchterm">
                        </label>
                    </form>
                </div><!-- /.top-serach -->

                <div id="productsdiv">
                    @{
                        var filtermodel = new DataSets.ViewModels.ShopVM();
                        filtermodel.Products = Model.Products;

                        Html.RenderPartial("FilterIndex", filtermodel);
                    }
                </div>
                
                @*<script>
                    $.get('@Url.Action("FilterIndex","Shop",filtermodel)', function (content) {
                        $("#productsdiv").html(content);
                    });
                </script>*@
            </div><!-- /.col-md-12 -->
        </div><!-- /.row -->
    </div><!-- /.container -->
</section><!-- /.flat-row -->


@section Scripts{
    <script>

        $(document).ready(function () {
            $(".show-filter").click(function () {
                $(".slidebar-shop").toggle(1000);
            });
            $(".btn-close").click(function () {
                $(".slidebar-shop").hide(1000);
            });
            $(".search-product").click(function () {
                $(".search-field").focus();
            });
            var calltimeout;
            var priceSlider = $("#slide_range").slider({
                range: true,
                min: 0,
                max: @Model.Products.Max(x=>x.Price),
                values: [0, @Model.Products.Max(x=>x.Price)],
                slide: function (event, ui) {
                    var minPrice = ui.values[0];
                    var maxPrice = ui.values[1];

                    $("#amount").val("$" + minPrice + ".00" + " - " + "$" + maxPrice + ".00");

                    clearTimeout(calltimeout);
                    calltimeout = setTimeout(GetData, 1000);
                }
            });

            function GetData() {

                console.log("Get Data Called");
                $.ajax({
                    url: '@Url.Action("FilterIndex","Shop")',
                    data: {
                        minPrice: priceSlider.slider("values", 0),
                        maxPrice: priceSlider.slider("values", 1)
                    }
                })
                    .done(function (response) {
                        $("#productsdiv").html(response);
                    })
                    .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                        alert("Fail");
                    });
            }
        });
    </script>
}